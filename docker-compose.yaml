version: '3.9'

services:
  app:
    environment:
      - BACKEND_IP=${BACKEND_IP:-server}
    build:
      context: ./app
      target: ${DOCKER_COMPOSE_TARGET:-development}
      args:
        - NODE_VERSION=${NODE_VERSION:-19.9.0-bullseye}
    ports:
      - 8080:5173
      - 8083:80
    
  server1:
    build:
      context: ./server
      target: ${DOCKER_COMPOSE_TARGET:-development}
      args:
        - NODE_VERSION=${NODE_VERSION:-19.9.0-bullseye}
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules      
    ports:
      - 8081:3000
  server2:
    build:
      context: ./server
      target: ${DOCKER_COMPOSE_TARGET:-development}
      args:
        - NODE_VERSION=${NODE_VERSION:-19.9.0-bullseye}
    ports:
      - 8082:3000

  # server:
  #   env_file:
  #     - ./load-balancer/compose.env
  #   environment:
  #   - NGINX_ENVSUBST_TEMPLATE_SUFFIX = ".conf"
  #   build: ./load-balancer
  #   # image: nginx:1.24.0
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./load-balancer/templates:/etc/nginx/templates
  server:
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    build: ./load-balancer/.
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./load-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      # - ./load-balancer/certs:/etc/nginx/certs
  certbot:
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    image: certbot/certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw 
      - ./certbot/conf/:/etc/letsencrypt/:rw
